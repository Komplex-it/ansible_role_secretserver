---
- name: Finalize path to secrets
  ansible.builtin.set_fact:
    ss_secret_path_final: "{{ ss_secret_path }}{{ secret_name }}"

- name: Get access token based on username | ServiceAccount2
  ansible.builtin.debug:
    msg: "{{ ss_tokens.results | json_query(query) }}"
  vars:
#    query: "[?invocation.module_args.body.username=='ServiceAccount'].json.access_token | [0]"
    query: "[?item.key=='{{ ss_serviceaccount }}'].json.access_token | [0]"


- name: Set json query
  ansible.builtin.set_fact:
    json_query_token: "[?item.key=='{{ ss_serviceaccount }}'].json.access_token | [0]"
  
- name: Set token
  ansible.builtin.set_fact:
    sa_token: "{{ ss_tokens.results | json_query(json_query_token) }}"

- name: Fetch secrets
  ansible.builtin.set_fact:
    temp_secret: >-
      {{
          lookup(
              'community.general.tss',
              0,
              secret_path=ss_secret_path_final,
              base_url=ss_base_url,
              token=sa_token
          )
      }}
  changed_when: true
#  no_log: true

- name: Set password and username facts
  ansible.builtin.set_fact:
    secret: "{{ (temp_secret['items'] | items2dict(key_name='slug', value_name='itemValue'))['password'] }}"
    username: "{{ (temp_secret['items'] | items2dict(key_name='slug', value_name='itemValue'))['username'] }}"
    secret_id: "{{ temp_secret['id'] }}"
  no_log: true

- name: init list
  ansible.builtin.set_fact:
    unique_secrets: []
  delegate_facts: true

  # {{ hostvars[ansible_controller]['ss_base_url'] }}
- name: append secret to unique_secrets list
  ansible.builtin.set_fact:
#    unique_secrets: "{{ unique_secrets + [ secret_name ] }}"
    unique_secrets: "{{ hostvars[ansible_controller]['unique_secrets'] + [ 'test123' ] }}"
  delegate_facts: true

- name: debug
  debug:
    var: hostvars[ansible_controller]['unique_secrets']



